name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

defaults:
  run:
    shell: bash

jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19.5'
      - run: echo "/home/runner/go/bin" >> $GITHUB_PATH
      - run: go install golang.org/x/lint/golint@latest
      - run: go install honnef.co/go/tools/cmd/staticcheck@latest
      - run: sudo apt-get update -q
      - run: sudo apt-get install libopenal-dev xorg-dev libgl1-mesa-dev -y --allow-unauthenticated
      - run: go get .
      - run: xvfb-run -a go test -v -race ./...
      - run: go vet ./...
      - run: staticcheck ./...
      - run: golint -set_exit_status ./...
      - run: go build -v

  build_linux_arm:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19.5'
      - run: sudo apt-get install binutils-multiarch
      - run: sudo dpkg --add-architecture armhf
      - run: echo "" | sudo tee /etc/apt/sources.list
      - run: echo "deb [arch=amd64] http://us.archive.ubuntu.com/ubuntu/ bionic main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
      - run: echo "deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports bionic main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
      - run: echo "deb [arch=amd64] http://us.archive.ubuntu.com/ubuntu/ bionic-updates main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
      - run: echo "deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports bionic-updates main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
      - run: echo "deb [arch=amd64] http://us.archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
      - run: echo "deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports bionic-backports main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
      - run: sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 6B05F25D762E3157
      - run: sudo apt update -q
      - run: sudo apt install -f libgl1-mesa-dev:amd64 libc6-dev:armhf gcc-arm-linux-gnueabihf libopenal-dev:armhf libgl1-mesa-dev:armhf libxcursor-dev:armhf libxrandr-dev:armhf libxinerama-dev:armhf libxi-dev:armhf -y --allow-unauthenticated
      - run: export PKG_CONFIG_PATH=/usr/lib/arm-linux-gnueabihf/pkgconfig/
      - run: GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=1 CC=arm-linux-gnueabihf-gcc go build -v

  build_osx:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19.5'
      - run: echo "/Users/runner/go/bin" >> $GITHUB_PATH
      - run: go install golang.org/x/lint/golint@latest
      - run: go install honnef.co/go/tools/cmd/staticcheck@latest
      - run: brew install openal-soft
      - run: go get .
      - run: go test -v -race ./...
      - run: go vet ./...
      - run: staticcheck ./...
      - run: golint -set_exit_status ./...
      - run: go build -v

  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19.5'
      - run: echo "/c/Users/runneradmin/go/bin" >> $GITHUB_PATH
      - run: go install golang.org/x/lint/golint@latest
      - run: go install honnef.co/go/tools/cmd/staticcheck@latest
      - run: choco install wget --ignore-checksums
      - run: wget --no-check-certificate http://www.openal-soft.org/openal-binaries/openal-soft-1.21.0-bin.zip
      - run: 7z x openal-soft-1.21.0-bin.zip -o/c/
      - run: echo "CGO_CFLAGS=-I/c/openal-soft-1.21.0-bin/include/" >> $GITHUB_ENV
      - run: echo "CGO_LDFLAGS=-L/c/openal-soft-1.21.0-bin/libs/Win64/" >> $GITHUB_ENV
      - run: go get .
      #- run: go test -v -race ./...
      #- run: go vet ./...
      - run: staticcheck ./...
      - run: golint -set_exit_status ./...
      - run: go build -v -ldflags '-H=windowsgui'
